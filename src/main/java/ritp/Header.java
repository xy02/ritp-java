// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ritp.proto

package ritp;

/**
 * <pre>
 *流数据头，发送一条此数据开始一条流
 * </pre>
 *
 * Protobuf type {@code ritp.Header}
 */
public  final class Header extends
    com.google.protobuf.GeneratedMessageLite<
        Header, Header.Builder> implements
    // @@protoc_insertion_point(message_implements:ritp.Header)
    HeaderOrBuilder {
  private Header() {
    fn_ = "";
    data_ = com.google.protobuf.ByteString.EMPTY;
    dataType_ = "";
    bufType_ = "";
    outputTo_ = "";
  }
  public static final int FN_FIELD_NUMBER = 1;
  private String fn_;
  /**
   * <pre>
   *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
   * </pre>
   *
   * <code>string fn = 1;</code>
   * @return The fn.
   */
  @Override
  public String getFn() {
    return fn_;
  }
  /**
   * <pre>
   *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
   * </pre>
   *
   * <code>string fn = 1;</code>
   * @return The bytes for fn.
   */
  @Override
  public com.google.protobuf.ByteString
      getFnBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(fn_);
  }
  /**
   * <pre>
   *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
   * </pre>
   *
   * <code>string fn = 1;</code>
   * @param value The fn to set.
   */
  private void setFn(
      String value) {
    value.getClass();
  
    fn_ = value;
  }
  /**
   * <pre>
   *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
   * </pre>
   *
   * <code>string fn = 1;</code>
   */
  private void clearFn() {
    
    fn_ = getDefaultInstance().getFn();
  }
  /**
   * <pre>
   *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
   * </pre>
   *
   * <code>string fn = 1;</code>
   * @param value The bytes for fn to set.
   */
  private void setFnBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    fn_ = value.toStringUtf8();
    
  }

  public static final int DATA_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString data_;
  /**
   * <pre>
   *数据，可以包含生产者的信息、消费者需要的数据等
   * </pre>
   *
   * <code>bytes data = 2;</code>
   * @return The data.
   */
  @Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }
  /**
   * <pre>
   *数据，可以包含生产者的信息、消费者需要的数据等
   * </pre>
   *
   * <code>bytes data = 2;</code>
   * @param value The data to set.
   */
  private void setData(com.google.protobuf.ByteString value) {
    value.getClass();
  
    data_ = value;
  }
  /**
   * <pre>
   *数据，可以包含生产者的信息、消费者需要的数据等
   * </pre>
   *
   * <code>bytes data = 2;</code>
   */
  private void clearData() {
    
    data_ = getDefaultInstance().getData();
  }

  public static final int DATA_TYPE_FIELD_NUMBER = 3;
  private String dataType_;
  /**
   * <pre>
   *数据类型
   * </pre>
   *
   * <code>string data_type = 3;</code>
   * @return The dataType.
   */
  @Override
  public String getDataType() {
    return dataType_;
  }
  /**
   * <pre>
   *数据类型
   * </pre>
   *
   * <code>string data_type = 3;</code>
   * @return The bytes for dataType.
   */
  @Override
  public com.google.protobuf.ByteString
      getDataTypeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(dataType_);
  }
  /**
   * <pre>
   *数据类型
   * </pre>
   *
   * <code>string data_type = 3;</code>
   * @param value The dataType to set.
   */
  private void setDataType(
      String value) {
    value.getClass();
  
    dataType_ = value;
  }
  /**
   * <pre>
   *数据类型
   * </pre>
   *
   * <code>string data_type = 3;</code>
   */
  private void clearDataType() {
    
    dataType_ = getDefaultInstance().getDataType();
  }
  /**
   * <pre>
   *数据类型
   * </pre>
   *
   * <code>string data_type = 3;</code>
   * @param value The bytes for dataType to set.
   */
  private void setDataTypeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    dataType_ = value.toStringUtf8();
    
  }

  public static final int BUF_TYPE_FIELD_NUMBER = 4;
  private String bufType_;
  /**
   * <pre>
   *Msg.buf的类型
   * </pre>
   *
   * <code>string buf_type = 4;</code>
   * @return The bufType.
   */
  @Override
  public String getBufType() {
    return bufType_;
  }
  /**
   * <pre>
   *Msg.buf的类型
   * </pre>
   *
   * <code>string buf_type = 4;</code>
   * @return The bytes for bufType.
   */
  @Override
  public com.google.protobuf.ByteString
      getBufTypeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(bufType_);
  }
  /**
   * <pre>
   *Msg.buf的类型
   * </pre>
   *
   * <code>string buf_type = 4;</code>
   * @param value The bufType to set.
   */
  private void setBufType(
      String value) {
    value.getClass();
  
    bufType_ = value;
  }
  /**
   * <pre>
   *Msg.buf的类型
   * </pre>
   *
   * <code>string buf_type = 4;</code>
   */
  private void clearBufType() {
    
    bufType_ = getDefaultInstance().getBufType();
  }
  /**
   * <pre>
   *Msg.buf的类型
   * </pre>
   *
   * <code>string buf_type = 4;</code>
   * @param value The bytes for bufType to set.
   */
  private void setBufTypeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    bufType_ = value.toStringUtf8();
    
  }

  public static final int OUTPUT_TO_FIELD_NUMBER = 5;
  private String outputTo_;
  /**
   * <pre>
   *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
   * </pre>
   *
   * <code>string output_to = 5;</code>
   * @return The outputTo.
   */
  @Override
  public String getOutputTo() {
    return outputTo_;
  }
  /**
   * <pre>
   *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
   * </pre>
   *
   * <code>string output_to = 5;</code>
   * @return The bytes for outputTo.
   */
  @Override
  public com.google.protobuf.ByteString
      getOutputToBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(outputTo_);
  }
  /**
   * <pre>
   *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
   * </pre>
   *
   * <code>string output_to = 5;</code>
   * @param value The outputTo to set.
   */
  private void setOutputTo(
      String value) {
    value.getClass();
  
    outputTo_ = value;
  }
  /**
   * <pre>
   *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
   * </pre>
   *
   * <code>string output_to = 5;</code>
   */
  private void clearOutputTo() {
    
    outputTo_ = getDefaultInstance().getOutputTo();
  }
  /**
   * <pre>
   *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
   * </pre>
   *
   * <code>string output_to = 5;</code>
   * @param value The bytes for outputTo to set.
   */
  private void setOutputToBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    outputTo_ = value.toStringUtf8();
    
  }

  public static Header parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static Header parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static Header parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static Header parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static Header parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static Header parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static Header parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static Header parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static Header parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static Header parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static Header parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static Header parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(Header prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   *流数据头，发送一条此数据开始一条流
   * </pre>
   *
   * Protobuf type {@code ritp.Header}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        Header, Builder> implements
      // @@protoc_insertion_point(builder_implements:ritp.Header)
      HeaderOrBuilder {
    // Construct using ritp.Header.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
     * </pre>
     *
     * <code>string fn = 1;</code>
     * @return The fn.
     */
    @Override
    public String getFn() {
      return instance.getFn();
    }
    /**
     * <pre>
     *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
     * </pre>
     *
     * <code>string fn = 1;</code>
     * @return The bytes for fn.
     */
    @Override
    public com.google.protobuf.ByteString
        getFnBytes() {
      return instance.getFnBytes();
    }
    /**
     * <pre>
     *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
     * </pre>
     *
     * <code>string fn = 1;</code>
     * @param value The fn to set.
     * @return This builder for chaining.
     */
    public Builder setFn(
        String value) {
      copyOnWrite();
      instance.setFn(value);
      return this;
    }
    /**
     * <pre>
     *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
     * </pre>
     *
     * <code>string fn = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFn() {
      copyOnWrite();
      instance.clearFn();
      return this;
    }
    /**
     * <pre>
     *Consumer的功能名，此功能名应是一个可以在服务中心注册的服务方法
     * </pre>
     *
     * <code>string fn = 1;</code>
     * @param value The bytes for fn to set.
     * @return This builder for chaining.
     */
    public Builder setFnBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFnBytes(value);
      return this;
    }

    /**
     * <pre>
     *数据，可以包含生产者的信息、消费者需要的数据等
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return instance.getData();
    }
    /**
     * <pre>
     *数据，可以包含生产者的信息、消费者需要的数据等
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setData(value);
      return this;
    }
    /**
     * <pre>
     *数据，可以包含生产者的信息、消费者需要的数据等
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      copyOnWrite();
      instance.clearData();
      return this;
    }

    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>string data_type = 3;</code>
     * @return The dataType.
     */
    @Override
    public String getDataType() {
      return instance.getDataType();
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>string data_type = 3;</code>
     * @return The bytes for dataType.
     */
    @Override
    public com.google.protobuf.ByteString
        getDataTypeBytes() {
      return instance.getDataTypeBytes();
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>string data_type = 3;</code>
     * @param value The dataType to set.
     * @return This builder for chaining.
     */
    public Builder setDataType(
        String value) {
      copyOnWrite();
      instance.setDataType(value);
      return this;
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>string data_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDataType() {
      copyOnWrite();
      instance.clearDataType();
      return this;
    }
    /**
     * <pre>
     *数据类型
     * </pre>
     *
     * <code>string data_type = 3;</code>
     * @param value The bytes for dataType to set.
     * @return This builder for chaining.
     */
    public Builder setDataTypeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDataTypeBytes(value);
      return this;
    }

    /**
     * <pre>
     *Msg.buf的类型
     * </pre>
     *
     * <code>string buf_type = 4;</code>
     * @return The bufType.
     */
    @Override
    public String getBufType() {
      return instance.getBufType();
    }
    /**
     * <pre>
     *Msg.buf的类型
     * </pre>
     *
     * <code>string buf_type = 4;</code>
     * @return The bytes for bufType.
     */
    @Override
    public com.google.protobuf.ByteString
        getBufTypeBytes() {
      return instance.getBufTypeBytes();
    }
    /**
     * <pre>
     *Msg.buf的类型
     * </pre>
     *
     * <code>string buf_type = 4;</code>
     * @param value The bufType to set.
     * @return This builder for chaining.
     */
    public Builder setBufType(
        String value) {
      copyOnWrite();
      instance.setBufType(value);
      return this;
    }
    /**
     * <pre>
     *Msg.buf的类型
     * </pre>
     *
     * <code>string buf_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBufType() {
      copyOnWrite();
      instance.clearBufType();
      return this;
    }
    /**
     * <pre>
     *Msg.buf的类型
     * </pre>
     *
     * <code>string buf_type = 4;</code>
     * @param value The bytes for bufType to set.
     * @return This builder for chaining.
     */
    public Builder setBufTypeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBufTypeBytes(value);
      return this;
    }

    /**
     * <pre>
     *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
     * </pre>
     *
     * <code>string output_to = 5;</code>
     * @return The outputTo.
     */
    @Override
    public String getOutputTo() {
      return instance.getOutputTo();
    }
    /**
     * <pre>
     *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
     * </pre>
     *
     * <code>string output_to = 5;</code>
     * @return The bytes for outputTo.
     */
    @Override
    public com.google.protobuf.ByteString
        getOutputToBytes() {
      return instance.getOutputToBytes();
    }
    /**
     * <pre>
     *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
     * </pre>
     *
     * <code>string output_to = 5;</code>
     * @param value The outputTo to set.
     * @return This builder for chaining.
     */
    public Builder setOutputTo(
        String value) {
      copyOnWrite();
      instance.setOutputTo(value);
      return this;
    }
    /**
     * <pre>
     *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
     * </pre>
     *
     * <code>string output_to = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutputTo() {
      copyOnWrite();
      instance.clearOutputTo();
      return this;
    }
    /**
     * <pre>
     *Consumer处理结果的输出地址， 例："accReply", "wss://hostname:8080/path?fn=accReply"
     * </pre>
     *
     * <code>string output_to = 5;</code>
     * @param value The bytes for outputTo to set.
     * @return This builder for chaining.
     */
    public Builder setOutputToBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setOutputToBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:ritp.Header)
  }
  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected final Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new Header();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          Object[] objects = new Object[] {
            "fn_",
            "data_",
            "dataType_",
            "bufType_",
            "outputTo_",
          };
          String info =
              "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0208\u0002\n" +
              "\u0003\u0208\u0004\u0208\u0005\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<Header> parser = PARSER;
        if (parser == null) {
          synchronized (Header.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<Header>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:ritp.Header)
  private static final Header DEFAULT_INSTANCE;
  static {
    Header defaultInstance = new Header();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Header.class, defaultInstance);
  }

  public static Header getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Header> PARSER;

  public static com.google.protobuf.Parser<Header> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

